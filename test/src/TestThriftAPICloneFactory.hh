/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements. See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership. The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License. You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

#ifndef APIACCESSCLONEFACTORY_HH
#define APIACCESSCLONEFACTORY_HH

#include <TestThriftAPIHandler.hh>

#include <thrift/transport/TServerSocket.h>
#include <thrift/transport/TSocket.h>

#include <iostream>

/**
 * @brief TestThriftAPICloneFactory inherits from TestThriftAPI::TestThriftAPIIfFactory
 * to provide access to the server side of the transport. It is also useful for
 * making per-connection state. Without this CloneFactory, all connections
 * will end up sharing the same handler instance.
 * @note TestThriftAPIIfFactory is automatically generated by thrift.
 */
class TestThriftAPICloneFactory : virtual public TestThriftAPI::TestThriftAPIIfFactory {
public:
    TestThriftAPICloneFactory() = default;
    virtual ~TestThriftAPICloneFactory() = default;

    virtual TestThriftAPI::TestThriftAPIIf* getHandler(const apache::thrift::TConnectionInfo& connInfo);

    virtual void releaseHandler(TestThriftAPI::TestThriftAPIIf* handler);
};

#endif
